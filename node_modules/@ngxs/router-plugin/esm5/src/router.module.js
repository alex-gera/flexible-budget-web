/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { NgxsModule } from '@ngxs/store';
import { DefaultRouterStateSerializer, RouterStateSerializer } from './serializer';
import { RouterState } from './router.state';
// @dynamic
var NgxsRouterPluginModule = /** @class */ (function () {
    function NgxsRouterPluginModule() {
    }
    /**
     * @return {?}
     */
    NgxsRouterPluginModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: NgxsRouterPluginModule
        };
    };
    NgxsRouterPluginModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        // NOTE: Must mark as `dynamic` due to
                        // https://github.com/dherges/ng-packagr/issues/767
                        NgxsModule.forFeature([RouterState])
                    ],
                    providers: [{ provide: RouterStateSerializer, useClass: DefaultRouterStateSerializer }]
                },] }
    ];
    return NgxsRouterPluginModule;
}());
export { NgxsRouterPluginModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3hzL3JvdXRlci1wbHVnaW4vIiwic291cmNlcyI6WyJzcmMvcm91dGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN6QyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDbkYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUc3QztJQUFBO0lBY0EsQ0FBQzs7OztJQUxRLDhCQUFPOzs7SUFBZDtRQUNFLE9BQU87WUFDTCxRQUFRLEVBQUUsc0JBQXNCO1NBQ2pDLENBQUM7SUFDSixDQUFDOztnQkFiRixRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLHNDQUFzQzt3QkFDdEMsbURBQW1EO3dCQUNuRCxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUM7cUJBQ3JDO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLFFBQVEsRUFBRSw0QkFBNEIsRUFBRSxDQUFDO2lCQUN4Rjs7SUFPRCw2QkFBQztDQUFBLEFBZEQsSUFjQztTQU5ZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5neHNNb2R1bGUgfSBmcm9tICdAbmd4cy9zdG9yZSc7XHJcbmltcG9ydCB7IERlZmF1bHRSb3V0ZXJTdGF0ZVNlcmlhbGl6ZXIsIFJvdXRlclN0YXRlU2VyaWFsaXplciB9IGZyb20gJy4vc2VyaWFsaXplcic7XHJcbmltcG9ydCB7IFJvdXRlclN0YXRlIH0gZnJvbSAnLi9yb3V0ZXIuc3RhdGUnO1xyXG5cclxuLy8gQGR5bmFtaWNcclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICAvLyBOT1RFOiBNdXN0IG1hcmsgYXMgYGR5bmFtaWNgIGR1ZSB0b1xyXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2RoZXJnZXMvbmctcGFja2Fnci9pc3N1ZXMvNzY3XHJcbiAgICBOZ3hzTW9kdWxlLmZvckZlYXR1cmUoW1JvdXRlclN0YXRlXSlcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogUm91dGVyU3RhdGVTZXJpYWxpemVyLCB1c2VDbGFzczogRGVmYXVsdFJvdXRlclN0YXRlU2VyaWFsaXplciB9XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4c1JvdXRlclBsdWdpbk1vZHVsZSB7XHJcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogTmd4c1JvdXRlclBsdWdpbk1vZHVsZVxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19