/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Public event api of the router
 */
var /**
 * Public event api of the router
 */
Navigate = /** @class */ (function () {
    function Navigate(path, queryParams, extras) {
        this.path = path;
        this.queryParams = queryParams;
        this.extras = extras;
    }
    Object.defineProperty(Navigate, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Router] Navigate';
        },
        enumerable: true,
        configurable: true
    });
    return Navigate;
}());
/**
 * Public event api of the router
 */
export { Navigate };
if (false) {
    /** @type {?} */
    Navigate.prototype.path;
    /** @type {?} */
    Navigate.prototype.queryParams;
    /** @type {?} */
    Navigate.prototype.extras;
}
/**
 *
 * Angular Routers internal state events
 *
 */
/**
 * An action dispatched when the router navigates.
 * @template T
 */
var /**
 *
 * Angular Routers internal state events
 *
 */
/**
 * An action dispatched when the router navigates.
 * @template T
 */
RouterNavigation = /** @class */ (function () {
    function RouterNavigation(routerState, event) {
        this.routerState = routerState;
        this.event = event;
    }
    Object.defineProperty(RouterNavigation, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Router] RouterNavigation';
        },
        enumerable: true,
        configurable: true
    });
    return RouterNavigation;
}());
/**
 *
 * Angular Routers internal state events
 *
 */
/**
 * An action dispatched when the router navigates.
 * @template T
 */
export { RouterNavigation };
if (false) {
    /** @type {?} */
    RouterNavigation.prototype.routerState;
    /** @type {?} */
    RouterNavigation.prototype.event;
}
/**
 * An action dispatched when the router cancel navigation.
 * @template T, V
 */
var /**
 * An action dispatched when the router cancel navigation.
 * @template T, V
 */
RouterCancel = /** @class */ (function () {
    function RouterCancel(routerState, storeState, event) {
        this.routerState = routerState;
        this.storeState = storeState;
        this.event = event;
    }
    Object.defineProperty(RouterCancel, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Router] RouterCancel';
        },
        enumerable: true,
        configurable: true
    });
    return RouterCancel;
}());
/**
 * An action dispatched when the router cancel navigation.
 * @template T, V
 */
export { RouterCancel };
if (false) {
    /** @type {?} */
    RouterCancel.prototype.routerState;
    /** @type {?} */
    RouterCancel.prototype.storeState;
    /** @type {?} */
    RouterCancel.prototype.event;
}
/**
 * An action dispatched when the router errors.
 * @template T, V
 */
var /**
 * An action dispatched when the router errors.
 * @template T, V
 */
RouterError = /** @class */ (function () {
    function RouterError(routerState, storeState, event) {
        this.routerState = routerState;
        this.storeState = storeState;
        this.event = event;
    }
    Object.defineProperty(RouterError, "type", {
        get: /**
         * @return {?}
         */
        function () {
            // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138
            return '[Router] RouterError';
        },
        enumerable: true,
        configurable: true
    });
    return RouterError;
}());
/**
 * An action dispatched when the router errors.
 * @template T, V
 */
export { RouterError };
if (false) {
    /** @type {?} */
    RouterError.prototype.routerState;
    /** @type {?} */
    RouterError.prototype.storeState;
    /** @type {?} */
    RouterError.prototype.event;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLmFjdGlvbnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4cy9yb3V0ZXItcGx1Z2luLyIsInNvdXJjZXMiOlsic3JjL3JvdXRlci5hY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFZQTs7OztJQUtFLGtCQUNTLElBQVcsRUFDWCxXQUFvQixFQUNwQixNQUF5QjtRQUZ6QixTQUFJLEdBQUosSUFBSSxDQUFPO1FBQ1gsZ0JBQVcsR0FBWCxXQUFXLENBQVM7UUFDcEIsV0FBTSxHQUFOLE1BQU0sQ0FBbUI7SUFDL0IsQ0FBQztJQVJKLHNCQUFXLGdCQUFJOzs7O1FBQWY7WUFDRSxzSUFBc0k7WUFDdEksT0FBTyxtQkFBbUIsQ0FBQztRQUM3QixDQUFDOzs7T0FBQTtJQU1ILGVBQUM7QUFBRCxDQUFDLEFBVkQsSUFVQzs7Ozs7OztJQUpHLHdCQUFrQjs7SUFDbEIsK0JBQTJCOztJQUMzQiwwQkFBZ0M7Ozs7Ozs7Ozs7O0FBYXBDOzs7Ozs7Ozs7O0lBS0UsMEJBQW1CLFdBQWMsRUFBUyxLQUF1QjtRQUE5QyxnQkFBVyxHQUFYLFdBQVcsQ0FBRztRQUFTLFVBQUssR0FBTCxLQUFLLENBQWtCO0lBQUcsQ0FBQztJQUpyRSxzQkFBVyx3QkFBSTs7OztRQUFmO1lBQ0Usc0lBQXNJO1lBQ3RJLE9BQU8sMkJBQTJCLENBQUM7UUFDckMsQ0FBQzs7O09BQUE7SUFFSCx1QkFBQztBQUFELENBQUMsQUFORCxJQU1DOzs7Ozs7Ozs7Ozs7O0lBRGEsdUNBQXFCOztJQUFFLGlDQUE4Qjs7Ozs7O0FBTW5FOzs7OztJQUtFLHNCQUFtQixXQUFjLEVBQVMsVUFBYSxFQUFTLEtBQXVCO1FBQXBFLGdCQUFXLEdBQVgsV0FBVyxDQUFHO1FBQVMsZUFBVSxHQUFWLFVBQVUsQ0FBRztRQUFTLFVBQUssR0FBTCxLQUFLLENBQWtCO0lBQUcsQ0FBQztJQUozRixzQkFBVyxvQkFBSTs7OztRQUFmO1lBQ0Usc0lBQXNJO1lBQ3RJLE9BQU8sdUJBQXVCLENBQUM7UUFDakMsQ0FBQzs7O09BQUE7SUFFSCxtQkFBQztBQUFELENBQUMsQUFORCxJQU1DOzs7Ozs7OztJQURhLG1DQUFxQjs7SUFBRSxrQ0FBb0I7O0lBQUUsNkJBQThCOzs7Ozs7QUFNekY7Ozs7O0lBS0UscUJBQW1CLFdBQWMsRUFBUyxVQUFhLEVBQVMsS0FBc0I7UUFBbkUsZ0JBQVcsR0FBWCxXQUFXLENBQUc7UUFBUyxlQUFVLEdBQVYsVUFBVSxDQUFHO1FBQVMsVUFBSyxHQUFMLEtBQUssQ0FBaUI7SUFBRyxDQUFDO0lBSjFGLHNCQUFXLG1CQUFJOzs7O1FBQWY7WUFDRSxzSUFBc0k7WUFDdEksT0FBTyxzQkFBc0IsQ0FBQztRQUNoQyxDQUFDOzs7T0FBQTtJQUVILGtCQUFDO0FBQUQsQ0FBQyxBQU5ELElBTUM7Ozs7Ozs7O0lBRGEsa0NBQXFCOztJQUFFLGlDQUFvQjs7SUFBRSw0QkFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIE5hdmlnYXRpb25DYW5jZWwsXHJcbiAgTmF2aWdhdGlvbkVycm9yLFxyXG4gIE5hdmlnYXRpb25FeHRyYXMsXHJcbiAgUGFyYW1zLFxyXG4gIFJvdXRlclN0YXRlU25hcHNob3QsXHJcbiAgUm91dGVzUmVjb2duaXplZFxyXG59IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcblxyXG4vKipcclxuICogUHVibGljIGV2ZW50IGFwaSBvZiB0aGUgcm91dGVyXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgTmF2aWdhdGUge1xyXG4gIHN0YXRpYyBnZXQgdHlwZSgpIHtcclxuICAgIC8vIE5PVEU6IE5vdCBuZWNlc3NhcnkgdG8gZGVjbGFyZSB0aGUgdHlwZSBpbiB0aGlzIHdheSBpbiB5b3VyIGNvZGUuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vbmd4cy9zdG9yZS9wdWxsLzY0NCNpc3N1ZWNvbW1lbnQtNDM2MDAzMTM4XHJcbiAgICByZXR1cm4gJ1tSb3V0ZXJdIE5hdmlnYXRlJztcclxuICB9XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwdWJsaWMgcGF0aDogYW55W10sXHJcbiAgICBwdWJsaWMgcXVlcnlQYXJhbXM/OiBQYXJhbXMsXHJcbiAgICBwdWJsaWMgZXh0cmFzPzogTmF2aWdhdGlvbkV4dHJhc1xyXG4gICkge31cclxufVxyXG5cclxuLyoqXHJcbiAqXHJcbiAqIEFuZ3VsYXIgUm91dGVycyBpbnRlcm5hbCBzdGF0ZSBldmVudHNcclxuICpcclxuICovXHJcblxyXG4vKipcclxuICogQW4gYWN0aW9uIGRpc3BhdGNoZWQgd2hlbiB0aGUgcm91dGVyIG5hdmlnYXRlcy5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBSb3V0ZXJOYXZpZ2F0aW9uPFQgPSBSb3V0ZXJTdGF0ZVNuYXBzaG90PiB7XHJcbiAgc3RhdGljIGdldCB0eXBlKCkge1xyXG4gICAgLy8gTk9URTogTm90IG5lY2Vzc2FyeSB0byBkZWNsYXJlIHRoZSB0eXBlIGluIHRoaXMgd2F5IGluIHlvdXIgY29kZS4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9uZ3hzL3N0b3JlL3B1bGwvNjQ0I2lzc3VlY29tbWVudC00MzYwMDMxMzhcclxuICAgIHJldHVybiAnW1JvdXRlcl0gUm91dGVyTmF2aWdhdGlvbic7XHJcbiAgfVxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByb3V0ZXJTdGF0ZTogVCwgcHVibGljIGV2ZW50OiBSb3V0ZXNSZWNvZ25pemVkKSB7fVxyXG59XHJcblxyXG4vKipcclxuICogQW4gYWN0aW9uIGRpc3BhdGNoZWQgd2hlbiB0aGUgcm91dGVyIGNhbmNlbCBuYXZpZ2F0aW9uLlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFJvdXRlckNhbmNlbDxULCBWID0gUm91dGVyU3RhdGVTbmFwc2hvdD4ge1xyXG4gIHN0YXRpYyBnZXQgdHlwZSgpIHtcclxuICAgIC8vIE5PVEU6IE5vdCBuZWNlc3NhcnkgdG8gZGVjbGFyZSB0aGUgdHlwZSBpbiB0aGlzIHdheSBpbiB5b3VyIGNvZGUuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vbmd4cy9zdG9yZS9wdWxsLzY0NCNpc3N1ZWNvbW1lbnQtNDM2MDAzMTM4XHJcbiAgICByZXR1cm4gJ1tSb3V0ZXJdIFJvdXRlckNhbmNlbCc7XHJcbiAgfVxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByb3V0ZXJTdGF0ZTogViwgcHVibGljIHN0b3JlU3RhdGU6IFQsIHB1YmxpYyBldmVudDogTmF2aWdhdGlvbkNhbmNlbCkge31cclxufVxyXG5cclxuLyoqXHJcbiAqIEFuIGFjdGlvbiBkaXNwYXRjaGVkIHdoZW4gdGhlIHJvdXRlciBlcnJvcnMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUm91dGVyRXJyb3I8VCwgViA9IFJvdXRlclN0YXRlU25hcHNob3Q+IHtcclxuICBzdGF0aWMgZ2V0IHR5cGUoKSB7XHJcbiAgICAvLyBOT1RFOiBOb3QgbmVjZXNzYXJ5IHRvIGRlY2xhcmUgdGhlIHR5cGUgaW4gdGhpcyB3YXkgaW4geW91ciBjb2RlLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL25neHMvc3RvcmUvcHVsbC82NDQjaXNzdWVjb21tZW50LTQzNjAwMzEzOFxyXG4gICAgcmV0dXJuICdbUm91dGVyXSBSb3V0ZXJFcnJvcic7XHJcbiAgfVxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByb3V0ZXJTdGF0ZTogViwgcHVibGljIHN0b3JlU3RhdGU6IFQsIHB1YmxpYyBldmVudDogTmF2aWdhdGlvbkVycm9yKSB7fVxyXG59XHJcblxyXG4vKipcclxuICogQW4gdW5pb24gdHlwZSBvZiByb3V0ZXIgYWN0aW9ucy5cclxuICovXHJcbmV4cG9ydCB0eXBlIFJvdXRlckFjdGlvbjxULCBWID0gUm91dGVyU3RhdGVTbmFwc2hvdD4gPVxyXG4gIHwgUm91dGVyTmF2aWdhdGlvbjxWPlxyXG4gIHwgUm91dGVyQ2FuY2VsPFQsIFY+XHJcbiAgfCBSb3V0ZXJFcnJvcjxULCBWPjtcclxuIl19