{"version":3,"file":"ngxs-router-plugin.js.map","sources":["ng://@ngxs/router-plugin/src/serializer.ts","ng://@ngxs/router-plugin/src/router.actions.ts","ng://@ngxs/router-plugin/src/router.state.ts","ng://@ngxs/router-plugin/src/router.module.ts"],"sourcesContent":["import { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nexport abstract class RouterStateSerializer<T> {\r\n  abstract serialize(routerState: RouterStateSnapshot): T;\r\n}\r\n\r\nexport interface SerializedRouterStateSnapshot {\r\n  root: ActivatedRouteSnapshot;\r\n  url: string;\r\n}\r\n\r\nexport class DefaultRouterStateSerializer\r\n  implements RouterStateSerializer<SerializedRouterStateSnapshot> {\r\n  serialize(routerState: RouterStateSnapshot): SerializedRouterStateSnapshot {\r\n    return {\r\n      root: this.serializeRoute(routerState.root),\r\n      url: routerState.url\r\n    };\r\n  }\r\n\r\n  private serializeRoute(route: ActivatedRouteSnapshot): ActivatedRouteSnapshot {\r\n    const children = route.children.map(c => this.serializeRoute(c));\r\n    return {\r\n      url: route.url,\r\n      params: route.params,\r\n      queryParams: route.queryParams,\r\n      fragment: route.fragment,\r\n      data: route.data,\r\n      outlet: route.outlet,\r\n      component: null,\r\n      routeConfig: null,\r\n      root: null as any,\r\n      parent: null,\r\n      firstChild: children[0],\r\n      children: children,\r\n      pathFromRoot: null as any,\r\n      paramMap: route.paramMap,\r\n      queryParamMap: route.queryParamMap,\r\n      toString: route.toString\r\n    };\r\n  }\r\n}\r\n","import {\r\n  NavigationCancel,\r\n  NavigationError,\r\n  NavigationExtras,\r\n  Params,\r\n  RouterStateSnapshot,\r\n  RoutesRecognized\r\n} from '@angular/router';\r\n\r\n/**\r\n * Public event api of the router\r\n */\r\nexport class Navigate {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Router] Navigate';\r\n  }\r\n  constructor(\r\n    public path: any[],\r\n    public queryParams?: Params,\r\n    public extras?: NavigationExtras\r\n  ) {}\r\n}\r\n\r\n/**\r\n *\r\n * Angular Routers internal state events\r\n *\r\n */\r\n\r\n/**\r\n * An action dispatched when the router navigates.\r\n */\r\nexport class RouterNavigation<T = RouterStateSnapshot> {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Router] RouterNavigation';\r\n  }\r\n  constructor(public routerState: T, public event: RoutesRecognized) {}\r\n}\r\n\r\n/**\r\n * An action dispatched when the router cancel navigation.\r\n */\r\nexport class RouterCancel<T, V = RouterStateSnapshot> {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Router] RouterCancel';\r\n  }\r\n  constructor(public routerState: V, public storeState: T, public event: NavigationCancel) {}\r\n}\r\n\r\n/**\r\n * An action dispatched when the router errors.\r\n */\r\nexport class RouterError<T, V = RouterStateSnapshot> {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Router] RouterError';\r\n  }\r\n  constructor(public routerState: V, public storeState: T, public event: NavigationError) {}\r\n}\r\n\r\n/**\r\n * An union type of router actions.\r\n */\r\nexport type RouterAction<T, V = RouterStateSnapshot> =\r\n  | RouterNavigation<V>\r\n  | RouterCancel<T, V>\r\n  | RouterError<T, V>;\r\n","import { NgZone, Injectable } from '@angular/core';\r\nimport {\r\n  NavigationCancel,\r\n  NavigationError,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  RoutesRecognized,\r\n  ResolveEnd\r\n} from '@angular/router';\r\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\n\r\nimport {\r\n  Navigate,\r\n  RouterAction,\r\n  RouterCancel,\r\n  RouterError,\r\n  RouterNavigation\r\n} from './router.actions';\r\nimport { RouterStateSerializer } from './serializer';\r\n\r\nexport type RouterStateModel<T = RouterStateSnapshot> = {\r\n  state?: T;\r\n  navigationId?: number;\r\n};\r\n\r\n@State<RouterStateModel>({\r\n  name: 'router',\r\n  defaults: {\r\n    state: undefined,\r\n    navigationId: undefined\r\n  }\r\n})\r\n@Injectable()\r\nexport class RouterState {\r\n  private routerStateSnapshot: RouterStateSnapshot;\r\n  private routerState: RouterStateModel;\r\n  private lastRoutesRecognized: RoutesRecognized;\r\n  private dispatchTriggeredByRouter = false; // used only in dev mode in combination with routerReducer\r\n  private navigationTriggeredByDispatch = false; // used only in dev mode in combination with routerReducer\r\n\r\n  /**\r\n   * Selectors\r\n   */\r\n\r\n  @Selector()\r\n  static state<T = RouterStateSnapshot>(state: RouterStateModel<T>) {\r\n    return state && state.state;\r\n  }\r\n\r\n  @Selector()\r\n  static url(state: RouterStateModel): string | undefined {\r\n    return state && state.state && state.state.url;\r\n  }\r\n\r\n  constructor(\r\n    private _store: Store,\r\n    private _router: Router,\r\n    private _serializer: RouterStateSerializer<RouterStateSnapshot>,\r\n    private _ngZone: NgZone\r\n  ) {\r\n    this.setUpStoreListener();\r\n    this.setUpStateRollbackEvents();\r\n  }\r\n\r\n  @Action(Navigate)\r\n  navigate(ctx: StateContext<RouterStateModel>, action: Navigate) {\r\n    this._ngZone.run(() =>\r\n      this._router.navigate(action.path, {\r\n        queryParams: action.queryParams,\r\n        ...action.extras\r\n      })\r\n    );\r\n  }\r\n\r\n  @Action([RouterNavigation, RouterError, RouterCancel])\r\n  angularRouterAction(\r\n    ctx: StateContext<RouterStateModel>,\r\n    action: RouterAction<any, RouterStateSnapshot>\r\n  ) {\r\n    ctx.setState({\r\n      ...ctx.getState(),\r\n      state: action.routerState,\r\n      navigationId: action.event.id\r\n    });\r\n  }\r\n\r\n  private setUpStoreListener(): void {\r\n    this._store.select(RouterState).subscribe(s => {\r\n      this.routerState = s;\r\n    });\r\n    this._store.select(RouterState.state).subscribe(() => {\r\n      this.navigateIfNeeded();\r\n    });\r\n  }\r\n\r\n  private setUpStateRollbackEvents(): void {\r\n    this._router.events.subscribe(e => {\r\n      if (e instanceof RoutesRecognized) {\r\n        this.lastRoutesRecognized = e;\r\n      } else if (e instanceof ResolveEnd) {\r\n        this.resolveEnd(e.state);\r\n      } else if (e instanceof NavigationCancel) {\r\n        this.dispatchRouterCancel(e);\r\n      } else if (e instanceof NavigationError) {\r\n        this.dispatchRouterError(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The `ResolveEnd` event is always triggered after running all resolvers\r\n   * that are linked to some route and child routes\r\n   */\r\n  private resolveEnd(routerStateSnapshot: RouterStateSnapshot): void {\r\n    this.routerStateSnapshot = this._serializer.serialize(routerStateSnapshot);\r\n    if (this.shouldDispatchRouterNavigation()) {\r\n      this.dispatchRouterNavigation();\r\n    }\r\n  }\r\n\r\n  private shouldDispatchRouterNavigation(): boolean {\r\n    if (!this.routerState) return true;\r\n    return !this.navigationTriggeredByDispatch;\r\n  }\r\n\r\n  private navigateIfNeeded(): void {\r\n    if (!this.routerState || !this.routerState.state) {\r\n      return;\r\n    }\r\n    if (this.dispatchTriggeredByRouter) return;\r\n\r\n    if (this._router.url !== this.routerState.state.url) {\r\n      this.navigationTriggeredByDispatch = true;\r\n      this._ngZone.run(() => this._router.navigateByUrl(this.routerState.state!.url));\r\n    }\r\n  }\r\n\r\n  private dispatchRouterNavigation(): void {\r\n    this.dispatchRouterAction(\r\n      new RouterNavigation(\r\n        this.routerStateSnapshot,\r\n        new RoutesRecognized(\r\n          this.lastRoutesRecognized.id,\r\n          this.lastRoutesRecognized.url,\r\n          this.lastRoutesRecognized.urlAfterRedirects,\r\n          this.routerStateSnapshot\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  private dispatchRouterCancel(event: NavigationCancel): void {\r\n    this.dispatchRouterAction(\r\n      new RouterCancel(this.routerStateSnapshot, this.routerState, event)\r\n    );\r\n  }\r\n\r\n  private dispatchRouterError(event: NavigationError): void {\r\n    this.dispatchRouterAction(\r\n      new RouterError(\r\n        this.routerStateSnapshot,\r\n        this.routerState,\r\n        new NavigationError(event.id, event.url, `${event}`)\r\n      )\r\n    );\r\n  }\r\n\r\n  private dispatchRouterAction<T>(action: RouterAction<T>): void {\r\n    this.dispatchTriggeredByRouter = true;\r\n    try {\r\n      this._store.dispatch(action);\r\n    } finally {\r\n      this.dispatchTriggeredByRouter = false;\r\n      this.navigationTriggeredByDispatch = false;\r\n    }\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { DefaultRouterStateSerializer, RouterStateSerializer } from './serializer';\r\nimport { RouterState } from './router.state';\r\n\r\n// @dynamic\r\n@NgModule({\r\n  imports: [\r\n    // NOTE: Must mark as `dynamic` due to\r\n    // https://github.com/dherges/ng-packagr/issues/767\r\n    NgxsModule.forFeature([RouterState])\r\n  ],\r\n  providers: [{ provide: RouterStateSerializer, useClass: DefaultRouterStateSerializer }]\r\n})\r\nexport class NgxsRouterPluginModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxsRouterPluginModule\r\n    };\r\n  }\r\n}\r\n"],"names":["tslib_1.__decorate"],"mappings":"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"}
