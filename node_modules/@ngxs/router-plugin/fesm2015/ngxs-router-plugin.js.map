{"version":3,"file":"ngxs-router-plugin.js.map","sources":["ng://@ngxs/router-plugin/src/serializer.ts","ng://@ngxs/router-plugin/src/router.actions.ts","ng://@ngxs/router-plugin/src/router.state.ts","ng://@ngxs/router-plugin/src/router.module.ts"],"sourcesContent":["import { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nexport abstract class RouterStateSerializer<T> {\r\n  abstract serialize(routerState: RouterStateSnapshot): T;\r\n}\r\n\r\nexport interface SerializedRouterStateSnapshot {\r\n  root: ActivatedRouteSnapshot;\r\n  url: string;\r\n}\r\n\r\nexport class DefaultRouterStateSerializer implements RouterStateSerializer<SerializedRouterStateSnapshot> {\r\n  serialize(routerState: RouterStateSnapshot): SerializedRouterStateSnapshot {\r\n    return {\r\n      root: this.serializeRoute(routerState.root),\r\n      url: routerState.url\r\n    };\r\n  }\r\n\r\n  private serializeRoute(route: ActivatedRouteSnapshot): ActivatedRouteSnapshot {\r\n    const children = route.children.map(c => this.serializeRoute(c));\r\n    return {\r\n      url: route.url,\r\n      params: route.params,\r\n      queryParams: route.queryParams,\r\n      fragment: route.fragment,\r\n      data: route.data,\r\n      outlet: route.outlet,\r\n      component: undefined,\r\n      routeConfig: null,\r\n      root: undefined,\r\n      parent: undefined,\r\n      firstChild: children[0],\r\n      children: children,\r\n      pathFromRoot: undefined,\r\n      paramMap: route.paramMap,\r\n      queryParamMap: route.queryParamMap,\r\n      toString: route.toString\r\n    };\r\n  }\r\n}\r\n","import {\r\n  NavigationCancel,\r\n  NavigationError,\r\n  NavigationExtras,\r\n  Params,\r\n  RouterStateSnapshot,\r\n  RoutesRecognized\r\n} from '@angular/router';\r\n\r\n/**\r\n * Public event api of the router\r\n */\r\nexport class Navigate {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Router] Navigate';\r\n  }\r\n  constructor(public path: any[], public queryParams?: Params, public extras?: NavigationExtras) {}\r\n}\r\n\r\n/**\r\n *\r\n * Angular Routers internal state events\r\n *\r\n */\r\n\r\n/**\r\n * An action dispatched when the router navigates.\r\n */\r\nexport class RouterNavigation<T = RouterStateSnapshot> {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Router] RouterNavigation';\r\n  }\r\n  constructor(public routerState: T, public event: RoutesRecognized) {}\r\n}\r\n\r\n/**\r\n * An action dispatched when the router cancel navigation.\r\n */\r\nexport class RouterCancel<T, V = RouterStateSnapshot> {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Router] RouterCancel';\r\n  }\r\n  constructor(public routerState: V, public storeState: T, public event: NavigationCancel) {}\r\n}\r\n\r\n/**\r\n * An action dispatched when the router errors.\r\n */\r\nexport class RouterError<T, V = RouterStateSnapshot> {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '[Router] RouterError';\r\n  }\r\n  constructor(public routerState: V, public storeState: T, public event: NavigationError) {}\r\n}\r\n\r\n/**\r\n * An union type of router actions.\r\n */\r\nexport type RouterAction<T, V = RouterStateSnapshot> = RouterNavigation<V> | RouterCancel<T, V> | RouterError<T, V>;\r\n","import { NavigationCancel, NavigationError, Router, RouterStateSnapshot, RoutesRecognized } from '@angular/router';\r\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { of } from 'rxjs';\r\n\r\nimport { Navigate, RouterAction, RouterCancel, RouterError, RouterNavigation } from './router.actions';\r\nimport { RouterStateSerializer } from './serializer';\r\nimport { NgZone } from '@angular/core';\r\n\r\nexport type RouterStateModel<T = RouterStateSnapshot> = {\r\n  state: T;\r\n  navigationId: number;\r\n};\r\n\r\n@State<RouterStateModel>({\r\n  name: 'router',\r\n  defaults: {\r\n    state: null,\r\n    navigationId: null\r\n  }\r\n})\r\nexport class RouterState {\r\n  private routerStateSnapshot: RouterStateSnapshot;\r\n  private routerState: RouterStateModel;\r\n  private lastRoutesRecognized: RoutesRecognized;\r\n  private dispatchTriggeredByRouter = false; // used only in dev mode in combination with routerReducer\r\n  private navigationTriggeredByDispatch = false; // used only in dev mode in combination with routerReducer\r\n\r\n  /**\r\n   * Selectors\r\n   */\r\n\r\n  @Selector()\r\n  static state(state: RouterStateModel) {\r\n    return state && state.state;\r\n  }\r\n\r\n  @Selector()\r\n  static url(state: RouterStateModel): string | undefined {\r\n    return state && state.state && state.state.url;\r\n  }\r\n\r\n  constructor(\r\n    private _store: Store,\r\n    private _router: Router,\r\n    private _serializer: RouterStateSerializer<RouterStateSnapshot>,\r\n    private _ngZone: NgZone\r\n  ) {\r\n    this.setUpRouterHook();\r\n    this.setUpStoreListener();\r\n    this.setUpStateRollbackEvents();\r\n  }\r\n\r\n  @Action(Navigate)\r\n  navigate(ctx: StateContext<RouterStateModel>, action: Navigate) {\r\n    this._ngZone.run(() =>\r\n      this._router.navigate(action.path, {\r\n        queryParams: action.queryParams,\r\n        ...action.extras\r\n      })\r\n    );\r\n  }\r\n\r\n  @Action([RouterNavigation, RouterError, RouterCancel])\r\n  angularRouterAction(ctx: StateContext<RouterStateModel>, action: RouterAction<any, RouterStateSnapshot>) {\r\n    ctx.setState({\r\n      ...ctx.getState(),\r\n      state: action.routerState,\r\n      navigationId: action.event.id\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Hook into the angular router before each navigation action is performed\r\n   * since the route tree can be large, we serialize it into something more manageable\r\n   */\r\n  private setUpRouterHook(): void {\r\n    (<any>this._router).hooks.beforePreactivation = (routerStateSnapshot: RouterStateSnapshot) => {\r\n      this.routerStateSnapshot = this._serializer.serialize(routerStateSnapshot);\r\n      if (this.shouldDispatchRouterNavigation()) this.dispatchRouterNavigation();\r\n      return of(true);\r\n    };\r\n  }\r\n\r\n  private setUpStoreListener(): void {\r\n    this._store.select(RouterState).subscribe(s => {\r\n      this.routerState = s;\r\n    });\r\n    this._store.select(RouterState.state).subscribe(() => {\r\n      this.navigateIfNeeded();\r\n    });\r\n  }\r\n\r\n  private setUpStateRollbackEvents(): void {\r\n    this._router.events.subscribe(e => {\r\n      if (e instanceof RoutesRecognized) {\r\n        this.lastRoutesRecognized = e;\r\n      } else if (e instanceof NavigationCancel) {\r\n        this.dispatchRouterCancel(e);\r\n      } else if (e instanceof NavigationError) {\r\n        this.dispatchRouterError(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  private shouldDispatchRouterNavigation(): boolean {\r\n    if (!this.routerState) return true;\r\n    return !this.navigationTriggeredByDispatch;\r\n  }\r\n\r\n  private navigateIfNeeded(): void {\r\n    if (!this.routerState || !this.routerState.state) {\r\n      return;\r\n    }\r\n    if (this.dispatchTriggeredByRouter) return;\r\n\r\n    if (this._router.url !== this.routerState.state.url) {\r\n      this.navigationTriggeredByDispatch = true;\r\n      this._ngZone.run(() => this._router.navigateByUrl(this.routerState.state.url));\r\n    }\r\n  }\r\n\r\n  private dispatchRouterNavigation(): void {\r\n    this.dispatchRouterAction(\r\n      new RouterNavigation(\r\n        this.routerStateSnapshot,\r\n        new RoutesRecognized(\r\n          this.lastRoutesRecognized.id,\r\n          this.lastRoutesRecognized.url,\r\n          this.lastRoutesRecognized.urlAfterRedirects,\r\n          this.routerStateSnapshot\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  private dispatchRouterCancel(event: NavigationCancel): void {\r\n    this.dispatchRouterAction(new RouterCancel(this.routerStateSnapshot, this.routerState, event));\r\n  }\r\n\r\n  private dispatchRouterError(event: NavigationError): void {\r\n    this.dispatchRouterAction(\r\n      new RouterError(this.routerStateSnapshot, this.routerState, new NavigationError(event.id, event.url, `${event}`))\r\n    );\r\n  }\r\n\r\n  private dispatchRouterAction<T>(action: RouterAction<T>): void {\r\n    this.dispatchTriggeredByRouter = true;\r\n    try {\r\n      this._store.dispatch(action);\r\n    } finally {\r\n      this.dispatchTriggeredByRouter = false;\r\n      this.navigationTriggeredByDispatch = false;\r\n    }\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { DefaultRouterStateSerializer, RouterStateSerializer } from './serializer';\r\nimport { RouterState } from './router.state';\r\n\r\n// NOTE: Must mark as `dynamic` due to\r\n// https://github.com/dherges/ng-packagr/issues/767\r\nexport const NgxsModuleRouterState = NgxsModule.forFeature([RouterState]);\r\n\r\n// @dynamic\r\n@NgModule({\r\n  imports: [NgxsModuleRouterState],\r\n  providers: [{ provide: RouterStateSerializer, useClass: DefaultRouterStateSerializer }]\r\n})\r\nexport class NgxsRouterPluginModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxsRouterPluginModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"],"names":["tslib_1.__decorate"],"mappings":"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"}
